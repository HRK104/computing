


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1021 2018/2019 Lab 2
    3 00000000         ; 
    4 00000000         
    5 00000000         
    6 00000000                 AREA             RESET, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000         
    9 00000000         ;
   10 00000000         ; add your code for Q1 here
   11 00000000         ;
   12 00000000 E3A02010        MOV              R2, #16     ; R2( = n) = 16
   13 00000004 E3A01000        MOV              R1, #0      ; R1( = Fn-2) = 0 
   14 00000008 E3A00001        MOV              R0, #1      ; R0( = Fn-1) = 1
   15 0000000C         
   16 0000000C E3520001 
                       L1      CMP              R2, #1      ; R2 > 1 ?
   17 00000010 DA000004        BLE              L2          ; <= (opposite cond
                                                            ition to > in pseud
                                                            o code)
   18 00000014 E1A03000        MOV              R3, R0      ; R3( = tmp) = R0
   19 00000018 E0810000        ADD              R0, R1, R0  ; R0 = R1 + R0
   20 0000001C E1A01003        MOV              R1, R3      ; R1 = R3
   21 00000020 E2422001        SUB              R2, R2, #1  ; R2 = R2 - 1
   22 00000024 EAFFFFF8        B                L1
   23 00000028         L2
   24 00000028         
   25 00000028         ;F16 = 0x000003DB = 987
   26 00000028         
   27 00000028         
   28 00000028 E3A02020        MOV              R2, #32     ; R2( = n) = 32
   29 0000002C E3A01000        MOV              R1, #0      ; R1( = Fn-2) = 0
   30 00000030 E3A00001        MOV              R0, #1      ; R0( = Fn-1) = 1
   31 00000034         
   32 00000034 E3520001 
                       L3      CMP              R2, #1      ; R2 > 1 ?
   33 00000038 DA000004        BLE              L4          ; <= (opposite cond
                                                            ition to > in pseud
                                                            o code)
   34 0000003C E1A03000        MOV              R3, R0      ; R3( = tmp) = R0
   35 00000040 E0810000        ADD              R0, R1, R0  ; R0 = R1 + R0
   36 00000044 E1A01003        MOV              R1, R3      ; R1 = R3
   37 00000048 E2422001        SUB              R2, R2, #1  ; R2 = R2 - 1
   38 0000004C EAFFFFF8        B                L3
   39 00000050         L4
   40 00000050         
   41 00000050         ;F32 = 0x00213D05 = 2178309
   42 00000050         
   43 00000050         
   44 00000050         
   45 00000050         
   46 00000050         ;
   47 00000050         ; add your code for Q2 here
   48 00000050         ;(i)unsigned
   49 00000050 E3E05000        MOV              R5, #4294967295 ; R5 = 42949672
                                                            95 ( = 0xFFFFFFFF =
                                                             Max number )
   50 00000054         
   51 00000054 E1A02005        MOV              R2, R5      ; R2 = R5



ARM Macro Assembler    Page 2 


   52 00000058 E3A01000        MOV              R1, #0      ; R1( = Fn-2) = 0
   53 0000005C E3A00001        MOV              R0, #1      ; R0( = Fn-1) = 1
   54 00000060 E3A04001        MOV              R4, #1      ; R4( = count) =1
   55 00000064         
   56 00000064         
   57 00000064 E0456000 
                       L5      SUB              R6, R5, R0  ; R6 = R5 - R0(R6 =
                                                             Max - Fn-1) 
   58 00000068 E1560001        CMP              R6, R1      ; R6 >= R1?  (Max-F
                                                            n-1 >= Fn-2 ?)  
   59 0000006C 3A000007        BLO              L7          ; < (opposite condi
                                                            tion)
   60 00000070 E3520001        CMP              R2, #1      ; R2 > 1 ?
   61 00000074 9A000005        BLS              L6          ; <= (opposite cond
                                                            ition)
   62 00000078 E1A03000        MOV              R3, R0      ; R3 = R0( R4 = Fn-
                                                            1)
   63 0000007C E0810000        ADD              R0, R1, R0  ; R0 = R1 + R0 ( Fn
                                                             = Fn-2 + Fn -1)
   64 00000080 E1A01003        MOV              R1, R3      ; R1 = R3 ( Fn-2 = 
                                                            Fn-1)
   65 00000084 E2422001        SUB              R2, R2, #1  ; R2 = R2 - 1
   66 00000088 E2844001        ADD              R4, R4, #1  ; R4 = R4 + 1 (Coun
                                                            t = count + 1)
   67 0000008C EAFFFFF4        B                L5
   68 00000090         L6
   69 00000090         L7
   70 00000090         
   71 00000090         ;Fn = 0xB11924E1 = 2971215073 = the largest number in un
                       signed arithmatic
   72 00000090         ;n = 0x00000002F = 47
   73 00000090         
   74 00000090         
   75 00000090         
   76 00000090         
   77 00000090         
   78 00000090         ;(ii) signed
   79 00000090 E3E05102        MOV              R5, #2147483647 ;R5 = 214748364
                                                            7 ( = 0xFFFFFFFF = 
                                                            Max number)
   80 00000094         
   81 00000094 E1A02005        MOV              R2, R5      ; R2 = R5
   82 00000098 E3A01000        MOV              R1, #0      ; R1( = Fn-2) = 0
   83 0000009C E3A00001        MOV              R0, #1      ; R0( = Fn-1) = 1
   84 000000A0 E3A04001        MOV              R4, #1      ; R4( = count) =1
   85 000000A4         
   86 000000A4         
   87 000000A4 E0456000 
                       L8      SUB              R6, R5, R0  ; R6 = R5 - R0(R6 =
                                                             Max - Fn-1)
   88 000000A8 E1560001        CMP              R6, R1      ; R6 >= R1?  (Max-F
                                                            n-1 >= Fn-2 ?)  
   89 000000AC BA000007        BLT              L10         ; < (opposite condi
                                                            tion) 
   90 000000B0 E3520001        CMP              R2, #1      ; R2 > 1 ?
   91 000000B4 DA000005        BLE              L9          ; <= (opposite cond
                                                            ition)
   92 000000B8 E1A03000        MOV              R3, R0      ; R3 = R0( R4 = Fn-
                                                            1)



ARM Macro Assembler    Page 3 


   93 000000BC E0810000        ADD              R0, R1, R0  ; R0 = R1 + R0 ( Fn
                                                             = Fn-2 + Fn -1)
   94 000000C0 E1A01003        MOV              R1, R3      ; R1 = R3 ( Fn-2 = 
                                                            Fn-1
   95 000000C4 E2422001        SUB              R2, R2, #1  ; R2 = R2 - 1
   96 000000C8 E2844001        ADD              R4, R4, #1  ; R4 = R4 + 1 (Coun
                                                            t = count + 1)
   97 000000CC EAFFFFF4        B                L8
   98 000000D0         L9
   99 000000D0         L10
  100 000000D0         
  101 000000D0         ;Fn = 0x6D73E55F = 1836311903   = the largest number in 
                       signed arithmatic
  102 000000D0         ;n = 0x0000002E = 46
  103 000000D0         
  104 000000D0         
  105 000000D0         
  106 000000D0         
  107 000000D0         
  108 000000D0         
  109 000000D0 EAFFFFFE 
                       STOP    B                STOP        ; infinite loop to 
                                                            end
  110 000000D4         
  111 000000D4                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab2.d -o.\objects\lab2.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 516" --list=.\listings\lab2.lst lab2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

L1 0000000C

Symbol: L1
   Definitions
      At line 16 in file lab2.s
   Uses
      At line 22 in file lab2.s
Comment: L1 used once
L10 000000D0

Symbol: L10
   Definitions
      At line 99 in file lab2.s
   Uses
      At line 89 in file lab2.s
Comment: L10 used once
L2 00000028

Symbol: L2
   Definitions
      At line 23 in file lab2.s
   Uses
      At line 17 in file lab2.s
Comment: L2 used once
L3 00000034

Symbol: L3
   Definitions
      At line 32 in file lab2.s
   Uses
      At line 38 in file lab2.s
Comment: L3 used once
L4 00000050

Symbol: L4
   Definitions
      At line 39 in file lab2.s
   Uses
      At line 33 in file lab2.s
Comment: L4 used once
L5 00000064

Symbol: L5
   Definitions
      At line 57 in file lab2.s
   Uses
      At line 67 in file lab2.s
Comment: L5 used once
L6 00000090

Symbol: L6
   Definitions
      At line 68 in file lab2.s
   Uses
      At line 61 in file lab2.s
Comment: L6 used once
L7 00000090

Symbol: L7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 69 in file lab2.s
   Uses
      At line 59 in file lab2.s
Comment: L7 used once
L8 000000A4

Symbol: L8
   Definitions
      At line 87 in file lab2.s
   Uses
      At line 97 in file lab2.s
Comment: L8 used once
L9 000000D0

Symbol: L9
   Definitions
      At line 98 in file lab2.s
   Uses
      At line 91 in file lab2.s
Comment: L9 used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file lab2.s
   Uses
      None
Comment: RESET unused
STOP 000000D0

Symbol: STOP
   Definitions
      At line 109 in file lab2.s
   Uses
      At line 109 in file lab2.s
Comment: STOP used once
12 symbols
344 symbols in table
