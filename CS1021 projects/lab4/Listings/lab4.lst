


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1021 2018/2019 Lab 4
    3 00000000         ; 
    4 00000000         
    5 00000000                 AREA             RESET, CODE, READONLY
    6 00000000                 ENTRY
    7 00000000         
    8 00000000         ;
    9 00000000         ; add your code here
   10 00000000         ;
   11 00000000         
   12 00000000         ;Q1
   13 00000000         ;(i)0x12345678
   14 00000000         
   15 00000000         
   16 00000000 E59F1314        LDR              R1, =0x12345678 
                                                            ; R1 = 0x12345678
   17 00000004 E3A00000        MOV              R0,#0       ; R0 =0
   18 00000008 E3510000 
                       L0      CMP              R1,#0       ;if R1==0?
   19 0000000C 0A000002        BEQ              L1          ;finished
   20 00000010 E1B010A1        MOVS             R1,R1,LSR#1 ;shift LS bit into 
                                                            CARRY flag
   21 00000014 E2A00000        ADC              R0,R0,#0    ;add CARRY to R0
   22 00000018 EAFFFFFA        B                L0
   23 0000001C E2000001 
                       L1      AND              R0, R0,#0x1
   24 00000020         ;R0 =1 so odd number 
   25 00000020         
   26 00000020         ;(ii)  0xF0F0F0F0 
   27 00000020 E59F12F8        LDR              R1, = 0xF0F0F0F0
   28 00000024 E3A00000        MOV              R0,#0       ; R0 =0
   29 00000028 E3510000 
                       L2      CMP              R1,#0       ;if R1==0?
   30 0000002C 0A000002        BEQ              L3          ;finished
   31 00000030 E1B010A1        MOVS             R1,R1,LSR#1 ;shift LS bit into 
                                                            CARRY flag
   32 00000034 E2A00000        ADC              R0,R0,#0    ;add CARRY to R0
   33 00000038 EAFFFFFA        B                L2
   34 0000003C E2000001 
                       L3      AND              R0, R0,#0x1
   35 00000040         ;R0 =0 so even number 
   36 00000040         
   37 00000040         ;(iii)) 42
   38 00000040 E3A01042        LDR              R1, = 0x42
   39 00000044 E3A00000        MOV              R0,#0       ; R0 =0
   40 00000048 E3510000 
                       L4      CMP              R1,#0       ;if R1==0?
   41 0000004C 0A000002        BEQ              L5          ;finished
   42 00000050 E1B010A1        MOVS             R1,R1,LSR#1 ;shift LS bit into 
                                                            CARRY flag
   43 00000054 E2A00000        ADC              R0,R0,#0    ;add CARRY to R0
   44 00000058 EAFFFFFA        B                L4
   45 0000005C E2000001 
                       L5      AND              R0, R0,#0x1
   46 00000060         ;R0 =0 so even number 
   47 00000060         
   48 00000060         ;Q2
   49 00000060         ;Algorithm1



ARM Macro Assembler    Page 2 


   50 00000060         ;(i) 27/7
   51 00000060         ;Q(R0) =3, R(R1) =6
   52 00000060         
   53 00000060 E3A0001B        MOV              R0,#27
   54 00000064 E3A01007        MOV              R1,#7
   55 00000068 E3A02000        MOV              R2,#0
   56 0000006C E1500001 
                       L6      CMP              R0,R1       ;R0>=R1
   57 00000070 3A000002        BLO              L7          ;if R0<R1, go to L7
                                                            
   58 00000074 E2822001        ADD              R2,R2,#1    ;R2=R2+1(Q+1)
   59 00000078 E0400001        SUB              R0,R0,R1    ;R0=R0-R1(N-D)
   60 0000007C EAFFFFFA        B                L6
   61 00000080 E1A01000 
                       L7      MOV              R1,R0
   62 00000084 E1A00002        MOV              R0,R2
   63 00000088         
   64 00000088         ;(ii)  444444/23
   65 00000088         ;Q(R0) = 4B7B = 19323 in binary, R(R1) = F = 15 in binar
                       y
   66 00000088 E59F0294        LDR              R0,=444444
   67 0000008C E3A01017        MOV              R1,#23
   68 00000090 E3A02000        MOV              R2,#0
   69 00000094 E1500001 
                       L8      CMP              R0,R1       ;R0>=R1
   70 00000098 3A000002        BLO              L9          ;if R0<R1, go to L7
                                                            
   71 0000009C E2822001        ADD              R2,R2,#1    ;R2=R2+1(Q+1)
   72 000000A0 E0400001        SUB              R0,R0,R1    ;R0=R0-R1(N-D)
   73 000000A4 EAFFFFFA        B                L8
   74 000000A8 E1A01000 
                       L9      MOV              R1,R0
   75 000000AC E1A00002        MOV              R0,R2
   76 000000B0         
   77 000000B0         ;(iii)  33,554,432 / 506
   78 000000B0         ;Q(R0) = 10309 = 66313 in binary, R(R1) = 36 = 54 in bin
                       ary
   79 000000B0 E3A00402        LDR              R0,=33554432
   80 000000B4 E59F126C        LDR              R1,=506
   81 000000B8 E3A02000        MOV              R2,#0
   82 000000BC         L10
   83 000000BC E1500001        CMP              R0,R1       ;R0>=R1
   84 000000C0 3A000002        BLO              L11         ;if R0<R1, go to L7
                                                            
   85 000000C4 E2822001        ADD              R2,R2,#1    ;R2=R2+1(Q+1)
   86 000000C8 E0400001        SUB              R0,R0,R1    ;R0=R0-R1(N-D)
   87 000000CC EAFFFFFA        B                L10
   88 000000D0         L11
   89 000000D0 E1A01000        MOV              R1,R0
   90 000000D4 E1A00002        MOV              R0,R2
   91 000000D8         
   92 000000D8         ;Algorithm2
   93 000000D8         ;(i)27/7
   94 000000D8         ;Q(R0) =3, R(R1) =6
   95 000000D8 E3A0001B        LDR              R0,=0x0000001B
   96 000000DC E3A01007        MOV              R1,#7
   97 000000E0 E1A05000        MOV              R5,R0
   98 000000E4         L20
   99 000000E4 E1B05085        MOVS             R5, R5, LSL#1



ARM Macro Assembler    Page 3 


  100 000000E8 E2866001        ADD              R6,R6,#1
  101 000000EC E2A44000        ADC              R4,R4,#0
  102 000000F0 E3540000        CMP              R4,#0
  103 000000F4 0AFFFFFA        BEQ              L20
  104 000000F8 E1B05085 
                       L21     MOVS             R5,R5,LSL#1
  105 000000FC E2866001        ADD              R6,R6,#1
  106 00000100 E2844001        ADD              R4,R4,#1
  107 00000104 E3A07020        LDR              R7,=32
  108 00000108 E1560007        CMP              R6,R7
  109 0000010C 1AFFFFF9        BNE              L21         ;so far these proce
                                                            sse are leding to t
                                                            he number of bits i
                                                            n N 
  110 00000110         ;27 = 11011 so 5bits
  111 00000110         
  112 00000110 E3A02000        MOV              R2,#0       ;Q=0
  113 00000114 E3A03000        MOV              R3,#0       ;R=0    --initialis
                                                            e quotient and rema
                                                            inder to zero
  114 00000118         
  115 00000118         
  116 00000118 E2444001 
                       L12     SUB              R4,R4,#1    ;for i:n-1...0 do
  117 0000011C E3540000        CMP              R4, #0
  118 00000120 BA00001A        BLT              L13
  119 00000124 E1A03083        MOV              R3,R3,LSL#1 ;left-shift R by 1 
                                                            bit
  120 00000128         
  121 00000128 E1A05000        MOV              R5,R0
  122 0000012C E3A06000        MOV              R6,#0
  123 00000130         
  124 00000130 E3A09020        MOV              R9,#32
  125 00000134 E0499004        SUB              R9,R9,R4
  126 00000138         
  127 00000138         
  128 00000138 E3540000        CMP              R4,#0
  129 0000013C 0A000003        BEQ              L16
  130 00000140 BA000004        BLT              L17
  131 00000144         
  132 00000144 E1B05915        MOVS             R5, R5,LSL R9
  133 00000148 E2A66000        ADC              R6,R6,#0
  134 0000014C         
  135 0000014C EA000001        B                L17
  136 00000150 E1B05915 
                       L16     MOVS             R5, R5,LSL R9
  137 00000154 E2A66000        ADC              R6,R6,#0
  138 00000158         L17
  139 00000158 E1833006        ORR              R3,R6       ;set the least-sign
                                                            ificant bit of R eq
                                                            ual to bit i of the
                                                             numerator
  140 0000015C         
  141 0000015C E3A08000        MOV              R8,#0
  142 00000160 E1530001 
                       L18     CMP              R3,R1       ;if R >= D
  143 00000164 3A000004        BLO              L14
  144 00000168 E0433001 
                       L19     SUB              R3, R3, R1  ;R = R-D



ARM Macro Assembler    Page 4 


  145 0000016C E2888001        ADD              R8, R8,#1   ;Q(i) =1
  146 00000170 E1530001        CMP              R3,R1
  147 00000174 2AFFFFFB        BHS              L19
  148 00000178 EAFFFFF8        B                L18
  149 0000017C         L14
  150 0000017C E3580000        CMP              R8,#0
  151 00000180 0A000001        BEQ              L22
  152 00000184 E1A08418        MOV              R8,R8,LSL R4
  153 00000188 E0822008        ADD              R2,R2,R8
  154 0000018C         
  155 0000018C         
  156 0000018C EAFFFFE1 
                       L22     B                L12
  157 00000190 E1A00002 
                       L13     MOV              R0,R2
  158 00000194 E1A01003        MOV              R1,R3
  159 00000198         
  160 00000198         ;(ii)444444/23
  161 00000198         ;Q(R0) = 4B7B = 19323 in binary, R(R1) = F = 15 in binar
                       y
  162 00000198 E59F0184        LDR              R0,=0x0006C81C ;444444=  0x0006
                                                            C81C
  163 0000019C E3A01017        MOV              R1,#23
  164 000001A0 E1A05000        MOV              R5,R0
  165 000001A4         L34
  166 000001A4 E1B05085        MOVS             R5, R5, LSL#1
  167 000001A8 E2866001        ADD              R6,R6,#1
  168 000001AC E2A44000        ADC              R4,R4,#0
  169 000001B0 E3540000        CMP              R4,#0
  170 000001B4 0AFFFFFA        BEQ              L34
  171 000001B8 E1B05085 
                       L24     MOVS             R5,R5,LSL#1
  172 000001BC E2866001        ADD              R6,R6,#1
  173 000001C0 E2844001        ADD              R4,R4,#1
  174 000001C4 E3A07020        LDR              R7,=32
  175 000001C8 E1560007        CMP              R6,R7
  176 000001CC 1AFFFFF9        BNE              L24         ;so far these proce
                                                            sse are leding to t
                                                            he number of bits i
                                                            n N 
  177 000001D0         ;27 = 11011 so 5bits
  178 000001D0         
  179 000001D0 E3A02000        MOV              R2,#0       ;Q=0
  180 000001D4 E3A03000        MOV              R3,#0       ;R=0    --initialis
                                                            e quotient and rema
                                                            inder to zero
  181 000001D8         
  182 000001D8         
  183 000001D8 E2444001 
                       L25     SUB              R4,R4,#1    ;for i:n-1...0 do
  184 000001DC E3540000        CMP              R4, #0
  185 000001E0 BA00001A        BLT              L26
  186 000001E4 E1A03083        MOV              R3,R3,LSL#1 ;left-shift R by 1 
                                                            bit
  187 000001E8         
  188 000001E8 E1A05000        MOV              R5,R0
  189 000001EC E3A06000        MOV              R6,#0
  190 000001F0         
  191 000001F0 E3A09020        MOV              R9,#32



ARM Macro Assembler    Page 5 


  192 000001F4 E0499004        SUB              R9,R9,R4
  193 000001F8         
  194 000001F8         
  195 000001F8 E3540000        CMP              R4,#0
  196 000001FC 0A000003        BEQ              L27
  197 00000200 BA000004        BLT              L28
  198 00000204         
  199 00000204 E1B05915        MOVS             R5, R5,LSL R9
  200 00000208 E2A66000        ADC              R6,R6,#0
  201 0000020C         
  202 0000020C EA000001        B                L28
  203 00000210 E1B05915 
                       L27     MOVS             R5, R5,LSL R9
  204 00000214 E2A66000        ADC              R6,R6,#0
  205 00000218         L28
  206 00000218 E1833006        ORR              R3,R6       ;set the least-sign
                                                            ificant bit of R eq
                                                            ual to bit i of the
                                                             numerator
  207 0000021C E3A08000        MOV              R8,#0
  208 00000220 E1530001 
                       L30     CMP              R3,R1       ;if R >= D
  209 00000224 3A000004        BLO              L29
  210 00000228         
  211 00000228 E0433001 
                       L31     SUB              R3, R3, R1  ;R = R-D
  212 0000022C E2888001        ADD              R8, R8,#1   ;Q(i) =1
  213 00000230 E1530001        CMP              R3,R1
  214 00000234 2AFFFFFB        BHS              L31
  215 00000238 EAFFFFF8        B                L30
  216 0000023C         L29
  217 0000023C E3580000        CMP              R8,#0
  218 00000240 0A000001        BEQ              L32
  219 00000244 E1A08418        MOV              R8,R8,LSL R4
  220 00000248 E0822008        ADD              R2,R2,R8
  221 0000024C         
  222 0000024C         
  223 0000024C EAFFFFE1 
                       L32     B                L25
  224 00000250 E1A00002 
                       L26     MOV              R0,R2
  225 00000254 E1A01003        MOV              R1,R3
  226 00000258         
  227 00000258         ;(iii)33,554,432 / 506
  228 00000258         ;Q(R0) = 10309 = 66313 in binary, R(R1) = 36 = 54 in bin
                       ary
  229 00000258 E3A00402        LDR              R0,=0x02000000 ;33554432= 0x020
                                                            00000
  230 0000025C E59F10C4        LDR              R1,=506
  231 00000260 E1A05000        MOV              R5,R0
  232 00000264         L54
  233 00000264 E1B05085        MOVS             R5, R5, LSL#1
  234 00000268 E2866001        ADD              R6,R6,#1
  235 0000026C E2A44000        ADC              R4,R4,#0
  236 00000270 E3540000        CMP              R4,#0
  237 00000274 0AFFFFFA        BEQ              L54
  238 00000278 E1B05085 
                       L44     MOVS             R5,R5,LSL#1
  239 0000027C E2866001        ADD              R6,R6,#1



ARM Macro Assembler    Page 6 


  240 00000280 E2844001        ADD              R4,R4,#1
  241 00000284 E3A07020        LDR              R7,=32
  242 00000288 E1560007        CMP              R6,R7
  243 0000028C 1AFFFFF9        BNE              L44         ;so far these proce
                                                            sse are leding to t
                                                            he number of bits i
                                                            n N 
  244 00000290         ;27 = 11011 so 5bits
  245 00000290         
  246 00000290 E3A02000        MOV              R2,#0       ;Q=0
  247 00000294 E3A03000        MOV              R3,#0       ;R=0    --initialis
                                                            e quotient and rema
                                                            inder to zero
  248 00000298         
  249 00000298         
  250 00000298 E2444001 
                       L45     SUB              R4,R4,#1    ;for i:n-1...0 do
  251 0000029C E3540000        CMP              R4, #0
  252 000002A0 BA00001A        BLT              L46
  253 000002A4 E1A03083        MOV              R3,R3,LSL#1 ;left-shift R by 1 
                                                            bit
  254 000002A8         
  255 000002A8 E1A05000        MOV              R5,R0
  256 000002AC E3A06000        MOV              R6,#0
  257 000002B0         
  258 000002B0 E3A09020        MOV              R9,#32
  259 000002B4 E0499004        SUB              R9,R9,R4
  260 000002B8         
  261 000002B8         
  262 000002B8 E3540000        CMP              R4,#0
  263 000002BC 0A000003        BEQ              L47
  264 000002C0 BA000004        BLT              L48
  265 000002C4         
  266 000002C4 E1B05915        MOVS             R5, R5,LSL R9
  267 000002C8 E2A66000        ADC              R6,R6,#0
  268 000002CC         
  269 000002CC EA000001        B                L48
  270 000002D0 E1B05915 
                       L47     MOVS             R5, R5,LSL R9
  271 000002D4 E2A66000        ADC              R6,R6,#0
  272 000002D8         L48
  273 000002D8 E1833006        ORR              R3,R6       ;set the least-sign
                                                            ificant bit of R eq
                                                            ual to bit i of the
                                                             numerator
  274 000002DC E3A08000        MOV              R8,#0
  275 000002E0 E1530001 
                       L50     CMP              R3,R1       ;if R >= D
  276 000002E4 3A000004        BLO              L49
  277 000002E8         
  278 000002E8 E0433001 
                       L51     SUB              R3, R3, R1  ;R = R-D
  279 000002EC E2888001        ADD              R8, R8,#1   ;Q(i) =1
  280 000002F0 E1530001        CMP              R3,R1
  281 000002F4 2AFFFFFB        BHS              L51
  282 000002F8 EAFFFFF8        B                L50
  283 000002FC         L49
  284 000002FC E3580000        CMP              R8,#0
  285 00000300 0A000001        BEQ              L52



ARM Macro Assembler    Page 7 


  286 00000304 E1A08418        MOV              R8,R8,LSL R4
  287 00000308 E0822008        ADD              R2,R2,R8
  288 0000030C         
  289 0000030C         
  290 0000030C EAFFFFE1 
                       L52     B                L45
  291 00000310 E1A00002 
                       L46     MOV              R0,R2
  292 00000314 E1A01003        MOV              R1,R3
  293 00000318         
  294 00000318         
  295 00000318         
  296 00000318         
  297 00000318         
  298 00000318         
  299 00000318 EAFFFFFE 
                       L       B                L           ; infinite loop to 
                                                            end
  300 0000031C         
  301 0000031C                 END
              12345678 
              F0F0F0F0 
              0006C81C 
              000001FA 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab4.d -o.\objects\lab4.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 516" --list=.\listings\lab4.lst lab4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

L 00000318

Symbol: L
   Definitions
      At line 299 in file lab4.s
   Uses
      At line 299 in file lab4.s
Comment: L used once
L0 00000008

Symbol: L0
   Definitions
      At line 18 in file lab4.s
   Uses
      At line 22 in file lab4.s
Comment: L0 used once
L1 0000001C

Symbol: L1
   Definitions
      At line 23 in file lab4.s
   Uses
      At line 19 in file lab4.s
Comment: L1 used once
L10 000000BC

Symbol: L10
   Definitions
      At line 82 in file lab4.s
   Uses
      At line 87 in file lab4.s
Comment: L10 used once
L11 000000D0

Symbol: L11
   Definitions
      At line 88 in file lab4.s
   Uses
      At line 84 in file lab4.s
Comment: L11 used once
L12 00000118

Symbol: L12
   Definitions
      At line 116 in file lab4.s
   Uses
      At line 156 in file lab4.s
Comment: L12 used once
L13 00000190

Symbol: L13
   Definitions
      At line 157 in file lab4.s
   Uses
      At line 118 in file lab4.s
Comment: L13 used once
L14 0000017C

Symbol: L14



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 149 in file lab4.s
   Uses
      At line 143 in file lab4.s
Comment: L14 used once
L16 00000150

Symbol: L16
   Definitions
      At line 136 in file lab4.s
   Uses
      At line 129 in file lab4.s
Comment: L16 used once
L17 00000158

Symbol: L17
   Definitions
      At line 138 in file lab4.s
   Uses
      At line 130 in file lab4.s
      At line 135 in file lab4.s

L18 00000160

Symbol: L18
   Definitions
      At line 142 in file lab4.s
   Uses
      At line 148 in file lab4.s
Comment: L18 used once
L19 00000168

Symbol: L19
   Definitions
      At line 144 in file lab4.s
   Uses
      At line 147 in file lab4.s
Comment: L19 used once
L2 00000028

Symbol: L2
   Definitions
      At line 29 in file lab4.s
   Uses
      At line 33 in file lab4.s
Comment: L2 used once
L20 000000E4

Symbol: L20
   Definitions
      At line 98 in file lab4.s
   Uses
      At line 103 in file lab4.s
Comment: L20 used once
L21 000000F8

Symbol: L21
   Definitions
      At line 104 in file lab4.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 109 in file lab4.s
Comment: L21 used once
L22 0000018C

Symbol: L22
   Definitions
      At line 156 in file lab4.s
   Uses
      At line 151 in file lab4.s
Comment: L22 used once
L24 000001B8

Symbol: L24
   Definitions
      At line 171 in file lab4.s
   Uses
      At line 176 in file lab4.s
Comment: L24 used once
L25 000001D8

Symbol: L25
   Definitions
      At line 183 in file lab4.s
   Uses
      At line 223 in file lab4.s
Comment: L25 used once
L26 00000250

Symbol: L26
   Definitions
      At line 224 in file lab4.s
   Uses
      At line 185 in file lab4.s
Comment: L26 used once
L27 00000210

Symbol: L27
   Definitions
      At line 203 in file lab4.s
   Uses
      At line 196 in file lab4.s
Comment: L27 used once
L28 00000218

Symbol: L28
   Definitions
      At line 205 in file lab4.s
   Uses
      At line 197 in file lab4.s
      At line 202 in file lab4.s

L29 0000023C

Symbol: L29
   Definitions
      At line 216 in file lab4.s
   Uses
      At line 209 in file lab4.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Comment: L29 used once
L3 0000003C

Symbol: L3
   Definitions
      At line 34 in file lab4.s
   Uses
      At line 30 in file lab4.s
Comment: L3 used once
L30 00000220

Symbol: L30
   Definitions
      At line 208 in file lab4.s
   Uses
      At line 215 in file lab4.s
Comment: L30 used once
L31 00000228

Symbol: L31
   Definitions
      At line 211 in file lab4.s
   Uses
      At line 214 in file lab4.s
Comment: L31 used once
L32 0000024C

Symbol: L32
   Definitions
      At line 223 in file lab4.s
   Uses
      At line 218 in file lab4.s
Comment: L32 used once
L34 000001A4

Symbol: L34
   Definitions
      At line 165 in file lab4.s
   Uses
      At line 170 in file lab4.s
Comment: L34 used once
L4 00000048

Symbol: L4
   Definitions
      At line 40 in file lab4.s
   Uses
      At line 44 in file lab4.s
Comment: L4 used once
L44 00000278

Symbol: L44
   Definitions
      At line 238 in file lab4.s
   Uses
      At line 243 in file lab4.s
Comment: L44 used once
L45 00000298




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Symbol: L45
   Definitions
      At line 250 in file lab4.s
   Uses
      At line 290 in file lab4.s
Comment: L45 used once
L46 00000310

Symbol: L46
   Definitions
      At line 291 in file lab4.s
   Uses
      At line 252 in file lab4.s
Comment: L46 used once
L47 000002D0

Symbol: L47
   Definitions
      At line 270 in file lab4.s
   Uses
      At line 263 in file lab4.s
Comment: L47 used once
L48 000002D8

Symbol: L48
   Definitions
      At line 272 in file lab4.s
   Uses
      At line 264 in file lab4.s
      At line 269 in file lab4.s

L49 000002FC

Symbol: L49
   Definitions
      At line 283 in file lab4.s
   Uses
      At line 276 in file lab4.s
Comment: L49 used once
L5 0000005C

Symbol: L5
   Definitions
      At line 45 in file lab4.s
   Uses
      At line 41 in file lab4.s
Comment: L5 used once
L50 000002E0

Symbol: L50
   Definitions
      At line 275 in file lab4.s
   Uses
      At line 282 in file lab4.s
Comment: L50 used once
L51 000002E8

Symbol: L51
   Definitions



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 278 in file lab4.s
   Uses
      At line 281 in file lab4.s
Comment: L51 used once
L52 0000030C

Symbol: L52
   Definitions
      At line 290 in file lab4.s
   Uses
      At line 285 in file lab4.s
Comment: L52 used once
L54 00000264

Symbol: L54
   Definitions
      At line 232 in file lab4.s
   Uses
      At line 237 in file lab4.s
Comment: L54 used once
L6 0000006C

Symbol: L6
   Definitions
      At line 56 in file lab4.s
   Uses
      At line 60 in file lab4.s
Comment: L6 used once
L7 00000080

Symbol: L7
   Definitions
      At line 61 in file lab4.s
   Uses
      At line 57 in file lab4.s
Comment: L7 used once
L8 00000094

Symbol: L8
   Definitions
      At line 69 in file lab4.s
   Uses
      At line 73 in file lab4.s
Comment: L8 used once
L9 000000A8

Symbol: L9
   Definitions
      At line 74 in file lab4.s
   Uses
      At line 70 in file lab4.s
Comment: L9 used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 5 in file lab4.s
   Uses
      None



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

Comment: RESET unused
44 symbols
378 symbols in table
