


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1021 2018/2019 Lab 3
    3 00000000         ; 
    4 00000000         
    5 00000000                 AREA             RESET, CODE, READONLY
    6 00000000                 ENTRY
    7 00000000         
    8 00000000         ;
    9 00000000         ; add your code here
   10 00000000         ;
   11 00000000         
   12 00000000         ;Q1
   13 00000000         ;(a,b) = (24,32)
   14 00000000         
   15 00000000 E3A00018        MOV              R0, #24     ; R0 = 24
   16 00000004 E3A01020        MOV              R1, #32     ; R1 = 32
   17 00000008 E1500001 
                       L0      CMP              R0, R1      ; R0 != R1?
   18 0000000C 0A000005        BEQ              L1          ; if R0 = R1, go to
                                                             L1
   19 00000010 E1500001        CMP              R0, R1      ; R0 > R1?
   20 00000014 9A000001        BLS              L2          ; if R0 <= R1, go t
                                                            o L2
   21 00000018 E0400001        SUB              R0, R0, R1  ; R0 = R0 - R1
   22 0000001C EA000000        B                L3
   23 00000020 E0411000 
                       L2      SUB              R1, R1, R0  ; R1 = R1 - R0
   24 00000024 EAFFFFF7 
                       L3      B                L0
   25 00000028         L1
   26 00000028         
   27 00000028         ;R0=0x00000008 R1 = 0x00000008 = 8, so GCD =8
   28 00000028         
   29 00000028         
   30 00000028         ;(a,b) = (2415, 3289)
   31 00000028         
   32 00000028         
   33 00000028 E59F0138        LDR              R0, =2415   ; R0 = 2415
   34 0000002C E59F1138        LDR              R1, =3289   ; R1 = 3289
   35 00000030 E1500001 
                       L4      CMP              R0, R1      ; R0 != R1?
   36 00000034 0A000005        BEQ              L5          ; if R0 = R1, go to
                                                             L1
   37 00000038 E1500001        CMP              R0, R1      ; R0 > R1?
   38 0000003C 9A000001        BLS              L6          ; if R0 <= R1, go t
                                                            o L2
   39 00000040 E0400001        SUB              R0, R0, R1  ; R0 = R0 - R1
   40 00000044 EA000000        B                L7
   41 00000048 E0411000 
                       L6      SUB              R1, R1, R0  ; R1 = R1 - R0
   42 0000004C EAFFFFF7 
                       L7      B                L4
   43 00000050         L5
   44 00000050         ;R0x00000017 R1 = 0x00000017 = 23, so GCD =23
   45 00000050         
   46 00000050         ;(a,b) = (4278, 8602)
   47 00000050         
   48 00000050 E59F0118        LDR              R0, =4278   ; R0 = 2415
   49 00000054 E59F1118        LDR              R1, =8602   ; R1 = 3289



ARM Macro Assembler    Page 2 


   50 00000058 E1500001 
                       L8      CMP              R0, R1      ; R0 != R1?
   51 0000005C 0A000005        BEQ              L9          ; if R0 = R1, go to
                                                             L1
   52 00000060 E1500001        CMP              R0, R1      ; R0 > R1?
   53 00000064 9A000001        BLS              L10         ; if R0 <= R1, go t
                                                            o L2
   54 00000068 E0400001        SUB              R0, R0, R1  ; R0 = R0 - R1
   55 0000006C EA000000        B                L11
   56 00000070 E0411000 
                       L10     SUB              R1, R1, R0  ; R1 = R1 - R0
   57 00000074 EAFFFFF7 
                       L11     B                L8
   58 00000078         L9
   59 00000078         ;R0x0000002E,  R1 = 0x0000002E = 46, so GCD =46
   60 00000078         
   61 00000078         ;(a,b) = (406, 555)
   62 00000078         
   63 00000078 E59F00F8        LDR              R0, =406    ; R0 = 2415
   64 0000007C E59F10F8        LDR              R1, =555    ; R1 = 3289
   65 00000080 E1500001 
                       L12     CMP              R0, R1      ; R0 != R1?
   66 00000084 0A000005        BEQ              L13         ; if R0 = R1, go to
                                                             L1
   67 00000088 E1500001        CMP              R0, R1      ; R0 > R1?
   68 0000008C 9A000001        BLS              L14         ; if R0 <= R1, go t
                                                            o L2
   69 00000090 E0400001        SUB              R0, R0, R1  ; R0 = R0 - R1
   70 00000094 EA000000        B                L15
   71 00000098 E0411000 
                       L14     SUB              R1, R1, R0  ; R1 = R1 - R0
   72 0000009C EAFFFFF7 
                       L15     B                L12
   73 000000A0         L13
   74 000000A0         ;R0x00000001 R1 = 0x00000001 = 1, so GCD =1
   75 000000A0         
   76 000000A0         ;Q2
   77 000000A0         ;F48
   78 000000A0         
   79 000000A0 E3A06030        MOV              R6, #48     ;R6 = 48
   80 000000A4 E3A02000        MOV              R2, #0      ;R2 = 0
   81 000000A8 E3A03000        MOV              R3, #0      ;R3 = 0(Fn-2)
   82 000000AC E3A00000        MOV              R0, #0      ;R0 = 0
   83 000000B0 E3A01001        MOV              R1, #1      ;R1 = 1(Fn-1)
   84 000000B4 E3560001 
                       L16     CMP              R6, #1      ;R6 >1?
   85 000000B8 DA000007        BLE              L17
   86 000000BC E1A04000        MOV              R4, R0      ;R4 = R0
   87 000000C0 E1A05001        MOV              R5, R1      ;R5 = R1
   88 000000C4 E0911003        ADDS             R1, R1, R3  ;R1 = R1 + R3
   89 000000C8 E0A00002        ADC              R0, R0, R2  ;R0 + R0 + R2
   90 000000CC E1A02004        MOV              R2, R4      ;R2 = R4
   91 000000D0 E1A03005        MOV              R3, R5      ;R3 = R1
   92 000000D4 E2466001        SUB              R6, R6, #1  ;R6 = R6-1
   93 000000D8 EAFFFFF5        B                L16
   94 000000DC         L17
   95 000000DC         ; R0=0x00000001,  R1=0x1E8D0A40 
   96 000000DC         ;so F48 =4807526976
   97 000000DC         



ARM Macro Assembler    Page 3 


   98 000000DC         ;F64
   99 000000DC E3A06040        MOV              R6, #64     ;R6 = 48
  100 000000E0 E3A02000        MOV              R2, #0      ;R2 = 0
  101 000000E4 E3A03000        MOV              R3, #0      ;R3 = 0(Fn-2)
  102 000000E8 E3A00000        MOV              R0, #0      ;R0 = 0
  103 000000EC E3A01001        MOV              R1, #1      ;R1 = 1(Fn-1)
  104 000000F0 E3560001 
                       L18     CMP              R6, #1      ;R6 >1?
  105 000000F4 DA000007        BLE              L19
  106 000000F8 E1A04000        MOV              R4, R0      ;R4 = R0
  107 000000FC E1A05001        MOV              R5, R1      ;R5 = R1
  108 00000100 E0911003        ADDS             R1, R1, R3  ;R1 = R1 + R3
  109 00000104 E0A00002        ADC              R0, R0, R2  ;
  110 00000108 E1A02004        MOV              R2, R4
  111 0000010C E1A03005        MOV              R3, R5
  112 00000110 E2466001        SUB              R6, R6, #1  ;R6 = R6-1
  113 00000114 EAFFFFF5        B                L18
  114 00000118         L19
  115 00000118         ;R0=0x000009A6 R1=0x61CA20BB
  116 00000118         ;so F64=10610209857723
  117 00000118         
  118 00000118         
  119 00000118         ;Q3
  120 00000118 E3E06102        LDR              R6, =0x7FFFFFFF ;Most significa
                                                            nt of Max number
  121 0000011C E3E07000        LDR              R7, =0xFFFFFFFF ;Least signific
                                                            ant of Max number
  122 00000120         
  123 00000120         
  124 00000120         
  125 00000120 E3A02000        MOV              R2, #0      ;R2 = 0
  126 00000124 E3A03000        MOV              R3, #0      ;R3 = 0(Fn-2)
  127 00000128 E3A00000        MOV              R0, #0      ;R0 = 0
  128 0000012C E3A01001        MOV              R1, #1      ;R1 = 1(Fn-1)
  129 00000130 E3A08001        MOV              R8, #1      ;R8( = count) =1
  130 00000134         
  131 00000134 E0579001 
                       L20     SUBS             R9, R7, R1  ;R9 = R7 -R1(LS of 
                                                            Max - LS of Fn-1)
  132 00000138 E0C6A000        SBC              R10, R6, R0 ;R10 = R6 - R0(MS o
                                                            f Max - MS of Fn-2)
                                                            
  133 0000013C E15A0002        CMP              R10, R2     ;R10 > R2(MS of Max
                                                            -Fn-1>MS of Fn-2)
  134 00000140 DA000007        BLE              L22         ;=< (opposite condi
                                                            tion)
  135 00000144 E1A04000        MOV              R4, R0      ;R4 = R0
  136 00000148 E1A05001        MOV              R5, R1      ;R5 = R1
  137 0000014C E0911003        ADDS             R1, R1, R3  ;R1 = R1 + R3
  138 00000150 E0A00002        ADC              R0, R0, R2  ;R0 = R0 + R2
  139 00000154 E1A02004        MOV              R2, R4      ;R2 = R4
  140 00000158 E1A03005        MOV              R3, R5      ;R3 = R5
  141 0000015C E2898001        ADD              R8, R9, #1  ;R9 = R9 + 1 (count
                                                             = count +1)
  142 00000160 EAFFFFF3        B                L20
  143 00000164         L22
  144 00000164         ;R0=0x68A3DD8E R1=0x61ECCFBD so Fn = 7540113804746346429
                       
  145 00000164         ;R9=0x0000005A =90(in decimal)  so n=92



ARM Macro Assembler    Page 4 


  146 00000164         
  147 00000164 EAFFFFFE 
                       STOP    B                STOP        ; infinite loop to 
                                                            end
  148 00000168         
  149 00000168                 END
              0000096F 
              00000CD9 
              000010B6 
              0000219A 
              00000196 
              0000022B 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab3.d -o.\objects\lab3.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 516" --list=.\listings\lab3.lst lab3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

L0 00000008

Symbol: L0
   Definitions
      At line 17 in file lab3.s
   Uses
      At line 24 in file lab3.s
Comment: L0 used once
L1 00000028

Symbol: L1
   Definitions
      At line 25 in file lab3.s
   Uses
      At line 18 in file lab3.s
Comment: L1 used once
L10 00000070

Symbol: L10
   Definitions
      At line 56 in file lab3.s
   Uses
      At line 53 in file lab3.s
Comment: L10 used once
L11 00000074

Symbol: L11
   Definitions
      At line 57 in file lab3.s
   Uses
      At line 55 in file lab3.s
Comment: L11 used once
L12 00000080

Symbol: L12
   Definitions
      At line 65 in file lab3.s
   Uses
      At line 72 in file lab3.s
Comment: L12 used once
L13 000000A0

Symbol: L13
   Definitions
      At line 73 in file lab3.s
   Uses
      At line 66 in file lab3.s
Comment: L13 used once
L14 00000098

Symbol: L14
   Definitions
      At line 71 in file lab3.s
   Uses
      At line 68 in file lab3.s
Comment: L14 used once
L15 0000009C

Symbol: L15



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 72 in file lab3.s
   Uses
      At line 70 in file lab3.s
Comment: L15 used once
L16 000000B4

Symbol: L16
   Definitions
      At line 84 in file lab3.s
   Uses
      At line 93 in file lab3.s
Comment: L16 used once
L17 000000DC

Symbol: L17
   Definitions
      At line 94 in file lab3.s
   Uses
      At line 85 in file lab3.s
Comment: L17 used once
L18 000000F0

Symbol: L18
   Definitions
      At line 104 in file lab3.s
   Uses
      At line 113 in file lab3.s
Comment: L18 used once
L19 00000118

Symbol: L19
   Definitions
      At line 114 in file lab3.s
   Uses
      At line 105 in file lab3.s
Comment: L19 used once
L2 00000020

Symbol: L2
   Definitions
      At line 23 in file lab3.s
   Uses
      At line 20 in file lab3.s
Comment: L2 used once
L20 00000134

Symbol: L20
   Definitions
      At line 131 in file lab3.s
   Uses
      At line 142 in file lab3.s
Comment: L20 used once
L22 00000164

Symbol: L22
   Definitions
      At line 143 in file lab3.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 134 in file lab3.s
Comment: L22 used once
L3 00000024

Symbol: L3
   Definitions
      At line 24 in file lab3.s
   Uses
      At line 22 in file lab3.s
Comment: L3 used once
L4 00000030

Symbol: L4
   Definitions
      At line 35 in file lab3.s
   Uses
      At line 42 in file lab3.s
Comment: L4 used once
L5 00000050

Symbol: L5
   Definitions
      At line 43 in file lab3.s
   Uses
      At line 36 in file lab3.s
Comment: L5 used once
L6 00000048

Symbol: L6
   Definitions
      At line 41 in file lab3.s
   Uses
      At line 38 in file lab3.s
Comment: L6 used once
L7 0000004C

Symbol: L7
   Definitions
      At line 42 in file lab3.s
   Uses
      At line 40 in file lab3.s
Comment: L7 used once
L8 00000058

Symbol: L8
   Definitions
      At line 50 in file lab3.s
   Uses
      At line 57 in file lab3.s
Comment: L8 used once
L9 00000078

Symbol: L9
   Definitions
      At line 58 in file lab3.s
   Uses
      At line 51 in file lab3.s
Comment: L9 used once
RESET 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: RESET
   Definitions
      At line 5 in file lab3.s
   Uses
      None
Comment: RESET unused
STOP 00000164

Symbol: STOP
   Definitions
      At line 147 in file lab3.s
   Uses
      At line 147 in file lab3.s
Comment: STOP used once
24 symbols
358 symbols in table
