


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 1 - Array Move
    4 00000000         ;
    5 00000000         
    6 00000000 00000010 
                       N       EQU              16          ; number of element
                                                            s
    7 00000000         
    8 00000000                 AREA             globals, DATA, READWRITE
    9 00000000         
   10 00000000         ; N word-size values
   11 00000000         
   12 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       ARRAY   SPACE            N*4         ; N words
   13 00000040         
   14 00000040         
   15 00000040                 AREA             RESET, CODE, READONLY
   16 00000000                 ENTRY
   17 00000000         
   18 00000000         ; for convenience, let's initialise test array [0, 1, 2,
                        ... , N-1]
   19 00000000         
   20 00000000 E59F005C        LDR              R0, =ARRAY
   21 00000004 E3A01000        LDR              R1, =0
   22 00000008 E3510010 
                       L1      CMP              R1, #N
   23 0000000C 2A000002        BHS              L2
   24 00000010 E7801101        STR              R1, [R0, R1, LSL #2]
   25 00000014 E2811001        ADD              R1, R1, #1
   26 00000018 EAFFFFFA        B                L1
   27 0000001C         L2
   28 0000001C         
   29 0000001C         ; initialise registers for your program
   30 0000001C         
   31 0000001C E59F0040        LDR              R0, =ARRAY
   32 00000020 E3A01006        LDR              R1, =6
   33 00000024 E3A02003        LDR              R2, =3
   34 00000028 E3A03010        LDR              R3, =N



ARM Macro Assembler    Page 2 


   35 0000002C         
   36 0000002C         ; your program goes here
   37 0000002C         
   38 0000002C         ; LDR R4,[R0,R1,LSL #2]    ;R4 = Memory.word[R0+R1*4]
   39 0000002C         ; SUB R1,R1,#1             ;R1 = R1-1
   40 0000002C         ; MOV R6,R2                ;R6 = R2 =3
   41 0000002C         ; 
   42 0000002C         ;L4 CMP R2,R1                ;R2>R1 ?
   43 0000002C         ; BHI L3                   ; go to L3
   44 0000002C         ; LDR R5,[R0,R1, LSL #2]   ;R5 = Memory.word[R0+R1*4]
   45 0000002C         ; ADD R1,R1,#1             ;R1 = R1+1
   46 0000002C         ; STR R5,[R0,R1, LSL #2]   ;Memory.word[R0+R1*4] = R5
   47 0000002C         ; SUB R1,R1,#2             ;R1 = R1-2
   48 0000002C         ; 
   49 0000002C         ; B  L4                    ; go to L4
   50 0000002C         ;L3 
   51 0000002C         ;   STR R4,[R0,R6,LSL #2]    ;Memory.word[R0+R6*4] 
   52 0000002C         
   53 0000002C         
   54 0000002C         
   55 0000002C E7904101        LDR              R4,[R0,R1,LSL #2] ;R4 = Memory.
                                                            word[R0+R1*4] 
   56 00000030 E1A08002        MOV              R8,R2       ;R6 = R2 =3
   57 00000034         
   58 00000034         
   59 00000034         
   60 00000034 E7905102        LDR              R5,[R0,R2,LSL #2] ;R5 = Memory.
                                                            word[R0+R1*4]
   61 00000038 E1520001 
                       L4      CMP              R2,R1
   62 0000003C 2A000004        BHS              L5
   63 00000040 E2822001        ADD              R2,R2,#1
   64 00000044 E7906102        LDR              R6,[R0,R2,LSL #2]
   65 00000048 E7805102        STR              R5,[R0,R2,LSL #2]
   66 0000004C E1A05006        MOV              R5,R6
   67 00000050 EAFFFFF8        B                L4
   68 00000054         L5
   69 00000054 E7804108        STR              R4,[R0,R8,LSL#2]
   70 00000058 E3E09001        LDR              R9,=0xFFFFFFFE
   71 0000005C E7904208        LDR              R4,[R0,R8,LSL #4]
   72 00000060         
   73 00000060 EAFFFFFE 
                       STOP    B                STOP
   74 00000064         
   75 00000064                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab1-array-move.d -o.\objects\lab1-array-move.o -IC:\Keil_v5\ARM\RV31\IN
C -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EV
AL SETA 1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\lab1-arra
y-move.lst lab1-array-move.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARRAY 00000000

Symbol: ARRAY
   Definitions
      At line 12 in file lab1-array-move.s
   Uses
      At line 20 in file lab1-array-move.s
      At line 31 in file lab1-array-move.s

globals 00000000

Symbol: globals
   Definitions
      At line 8 in file lab1-array-move.s
   Uses
      None
Comment: globals unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

L1 00000008

Symbol: L1
   Definitions
      At line 22 in file lab1-array-move.s
   Uses
      At line 26 in file lab1-array-move.s
Comment: L1 used once
L2 0000001C

Symbol: L2
   Definitions
      At line 27 in file lab1-array-move.s
   Uses
      At line 23 in file lab1-array-move.s
Comment: L2 used once
L4 00000038

Symbol: L4
   Definitions
      At line 61 in file lab1-array-move.s
   Uses
      At line 67 in file lab1-array-move.s
Comment: L4 used once
L5 00000054

Symbol: L5
   Definitions
      At line 68 in file lab1-array-move.s
   Uses
      At line 62 in file lab1-array-move.s
Comment: L5 used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 15 in file lab1-array-move.s
   Uses
      None
Comment: RESET unused
STOP 00000060

Symbol: STOP
   Definitions
      At line 73 in file lab1-array-move.s
   Uses
      At line 73 in file lab1-array-move.s
Comment: STOP used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000010

Symbol: N
   Definitions
      At line 6 in file lab1-array-move.s
   Uses
      At line 12 in file lab1-array-move.s
      At line 22 in file lab1-array-move.s
      At line 34 in file lab1-array-move.s

1 symbol
343 symbols in table
