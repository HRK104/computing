


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 1 - Matrix Multiplication
    4 00000000         ;
    5 00000000         
    6 00000000 00000004 
                       N       EQU              4
    7 00000000         
    8 00000000                 AREA             globals, DATA, READWRITE
    9 00000000         
   10 00000000         ; result matrix R
   11 00000000         
   12 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       ARR_R   SPACE            N*N*4       ; 4 * 4 * word-size
                                                             values
   13 00000040         
   14 00000040         
   15 00000040                 AREA             RESET, CODE, READONLY
   16 00000000                 ENTRY
   17 00000000         
   18 00000000 E59F0100        LDR              R0, =ARR_A
   19 00000004 E59F1100        LDR              R1, =ARR_B
   20 00000008 E59F2100        LDR              R2, =ARR_R
   21 0000000C E3A03004        LDR              R3, =N
   22 00000010         
   23 00000010         ; your program goes here
   24 00000010         
   25 00000010 E3A04000        LDR              R4, =0      ;i=0
   26 00000014 E3A05000        LDR              R5, =0      ;j=0
   27 00000018 E3A06000        LDR              R6, =0      ;k=0
   28 0000001C         
   29 0000001C E1540003 
                       L1      CMP              R4,R3       ;for(i=0;
   30 00000020 2A000017        BHS              L2          ;         i<N;i++){
                                                            
   31 00000024 E1550003 
                       L6      CMP              R5,R3       ;for(j=0;
   32 00000028 2A000012        BHS              L3          ;         j<N;j++){
                                                            



ARM Macro Assembler    Page 2 


   33 0000002C E3A07000        LDR              R7,=0       ; r=0;
   34 00000030 E1560003 
                       L5      CMP              R6,R3       ;for(k=0;
   35 00000034 2A000009        BHS              L4          ;        k<N;k++){
   36 00000038 E0080394        MUL              R8,R4,R3    ;index(A[i]) = row 
                                                            * row_size
   37 0000003C E0888006        ADD              R8,R8,R6    ;index(A[i,k]) = in
                                                            dex(A[i]) + column
   38 00000040 E7908108        LDR              R8,[R0,R8,LSL #2] ;elem(A[i,k])
                                                             = Memory.Word[ARR_
                                                            A + (index*4)]
   39 00000044 E0090396        MUL              R9,R6,R3    ;index(B[k]) = row 
                                                            * row_size
   40 00000048 E0899005        ADD              R9,R9,R5    ;index(B[k,j]) = in
                                                            dex(B[k]) + column
   41 0000004C E7919109        LDR              R9,[R1,R9,LSL #2] ;elem(B[k,j])
                                                             = Memory.Word[ARR_
                                                            B + (index*4)]
   42 00000050 E0080899        MUL              R8,R9,R8    ; ( A[ i , k ] * B[
                                                             k , j ] )
   43 00000054 E0877008        ADD              R7,R7,R8    ;r = r + ( A[ i , k
                                                             ] * B[ k , j ] ) ;
                                                            
   44 00000058 E2866001        ADD              R6,R6,#1    ;k++;
   45 0000005C EAFFFFF3        B                L5          ;}
   46 00000060 E0080394 
                       L4      MUL              R8,R4,R3    ;index(R[i]) = row 
                                                            * row_size
   47 00000064 E0888005        ADD              R8,R8,R5    ;index(R[i,j]) = in
                                                            dex(R[i]) + column
   48 00000068 E7827108        STR              R7,[R2,R8,LSL #2] ;elem(R[i,j])
                                                             = Memory.Word[ARR_
                                                            R + (index*4)]
   49 0000006C E2855001        ADD              R5,R5,#1    ;j++
   50 00000070 E3A06000        LDR              R6, =0      ;k=0
   51 00000074 EAFFFFEA        B                L6          ;}
   52 00000078 E2844001 
                       L3      ADD              R4,R4,#1    ;i++
   53 0000007C E3A05000        LDR              R5, =0      ;j=0
   54 00000080 EAFFFFE5        B                L1          ;}
   55 00000084         L2
   56 00000084 EAFFFFFE 
                       STOP    B                STOP
   57 00000088         
   58 00000088         ; two constant value matrices, A and B
   59 00000088         
   60 00000088 00000001 
              00000002 
              00000003 
              00000004 ARR_A   DCD              1,  2,  3,  4
   61 00000098 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   62 000000A8 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   63 000000B8 0000000D 



ARM Macro Assembler    Page 3 


              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   64 000000C8         
   65 000000C8 00000001 
              00000002 
              00000003 
              00000004 ARR_B   DCD              1,  2,  3,  4
   66 000000D8 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   67 000000E8 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   68 000000F8 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   69 00000108         
   70 00000108                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab1-matmul.d -o.\objects\lab1-matmul.o -IC:\Keil_v5\ARM\RV31\INC -IC:\K
eil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\lab1-matmul.lst l
ab1-matmul.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_R 00000000

Symbol: ARR_R
   Definitions
      At line 12 in file lab1-matmul.s
   Uses
      At line 20 in file lab1-matmul.s
Comment: ARR_R used once
globals 00000000

Symbol: globals
   Definitions
      At line 8 in file lab1-matmul.s
   Uses
      None
Comment: globals unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_A 00000088

Symbol: ARR_A
   Definitions
      At line 60 in file lab1-matmul.s
   Uses
      At line 18 in file lab1-matmul.s
Comment: ARR_A used once
ARR_B 000000C8

Symbol: ARR_B
   Definitions
      At line 65 in file lab1-matmul.s
   Uses
      At line 19 in file lab1-matmul.s
Comment: ARR_B used once
L1 0000001C

Symbol: L1
   Definitions
      At line 29 in file lab1-matmul.s
   Uses
      At line 54 in file lab1-matmul.s
Comment: L1 used once
L2 00000084

Symbol: L2
   Definitions
      At line 55 in file lab1-matmul.s
   Uses
      At line 30 in file lab1-matmul.s
Comment: L2 used once
L3 00000078

Symbol: L3
   Definitions
      At line 52 in file lab1-matmul.s
   Uses
      At line 32 in file lab1-matmul.s
Comment: L3 used once
L4 00000060

Symbol: L4
   Definitions
      At line 46 in file lab1-matmul.s
   Uses
      At line 35 in file lab1-matmul.s
Comment: L4 used once
L5 00000030

Symbol: L5
   Definitions
      At line 34 in file lab1-matmul.s
   Uses
      At line 45 in file lab1-matmul.s
Comment: L5 used once
L6 00000024

Symbol: L6



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 31 in file lab1-matmul.s
   Uses
      At line 51 in file lab1-matmul.s
Comment: L6 used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 15 in file lab1-matmul.s
   Uses
      None
Comment: RESET unused
STOP 00000084

Symbol: STOP
   Definitions
      At line 56 in file lab1-matmul.s
   Uses
      At line 56 in file lab1-matmul.s
Comment: STOP used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000004

Symbol: N
   Definitions
      At line 6 in file lab1-matmul.s
   Uses
      At line 12 in file lab1-matmul.s
      At line 12 in file lab1-matmul.s
      At line 21 in file lab1-matmul.s

1 symbol
347 symbols in table
