


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    3 00000000         
    4 00000000         
    5 00000000         ; Timer Stuff -- UM, Table 173
    6 00000000         
    7 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    8 00000000 E0008000 
                       T1      equ              0xE0008000
    9 00000000         
   10 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
   11 00000000 00000004 
                       TCR     equ              4
   12 00000000 00000014 
                       MCR     equ              0x14
   13 00000000 00000018 
                       MR0     equ              0x18
   14 00000000         
   15 00000000 00000002 
                       TimerCommandReset
                               equ              2
   16 00000000 00000001 
                       TimerCommandRun
                               equ              1
   17 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   18 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   19 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   20 00000000         
   21 00000000         ; VIC Stuff -- UM, Table 41
   22 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   23 00000000 00000010 
                       IntEnable
                               equ              0x10
   24 00000000 00000030 
                       VectAddr
                               equ              0x30
   25 00000000 00000100 
                       VectAddr0
                               equ              0x100
   26 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   27 00000000         
   28 00000000 00000004 
                       Timer0ChannelNumber



ARM Macro Assembler    Page 2 


                               equ              4           ; UM, Table 63
   29 00000000 00000010 
                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   30 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   31 00000000         
   32 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   33 00000000                 IMPORT           main
   34 00000000         
   35 00000000         ; (c) Mike Brady, 2014 -- 2019.
   36 00000000         
   37 00000000                 EXPORT           start
   38 00000000         start
   39 00000000         ; initialisation code
   40 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   41 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   42 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   43 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   44 00000000         
   45 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   46 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
   47 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
   48 00000000 E0028000 
                       IO0PIN  EQU              0xE0028000
   49 00000000         
   50 00000000         ; PWM 
   51 00000000 E0014000 
                       PWM_BASE
                               EQU              0xE0014000
   52 00000000 E0014000 
                       PWMIR   EQU              0xE0014000
   53 00000000 E0014004 
                       PWMTCR  EQU              0xE0014004
   54 00000000 E0014008 
                       PWMTC   EQU              0xE0014008
   55 00000000 E001400C 
                       PWMPR   EQU              0xE001400C
   56 00000000 E0014010 
                       PWMPC   EQU              0xE0014010
   57 00000000 E0014014 
                       PWMMCR  EQU              0xE0014014
   58 00000000 E0014018 
                       PWMMR0  EQU              0xE0014018
   59 00000000 E001401C 
                       PWMMR1  EQU              0xE001401C
   60 00000000 E0014020 
                       PWMMR2  EQU              0xE0014020
   61 00000000 E0014024 



ARM Macro Assembler    Page 3 


                       PWMMR3  EQU              0xE0014024
   62 00000000 E0014040 
                       PWMMR4  EQU              0xE0014040
   63 00000000 E0014044 
                       PWMMR5  EQU              0xE0014044
   64 00000000 E0014048 
                       PWMMR6  EQU              0xE0014048
   65 00000000 E001404C 
                       PWMPCR  EQU              0xE001404C
   66 00000000 E0014050 
                       PWMLER  EQU              0xE0014050
   67 00000000         
   68 00000000         
   69 00000000         ; Initialise the VIC
   70 00000000 E59F0140        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   71 00000004         
   72 00000004 E59F1140        ldr              r1,=irqhan
   73 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   74 0000000C         
   75 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   76 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   77 00000014         
   78 00000014 E3A01010        mov              r1,#Timer0Mask
   79 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   80 0000001C         
   81 0000001C E3A01000        mov              r1,#0
   82 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   83 00000024         
   84 00000024         ; Initialise Timer 0
   85 00000024 E59F0124        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   86 00000028         
   87 00000028 E3A01002        mov              r1,#TimerCommandReset
   88 0000002C E5801004        str              r1,[r0,#TCR]
   89 00000030         
   90 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   91 00000034 E5801000        str              r1,[r0,#IR]
   92 00000038         
   93 00000038 E59F1114        ldr              r1,=(14745600/1600)-1 ; 625 ms 
                                                            = 1/1600 second
   94 0000003C         ;ldr r1,=(14745600/200)-1  ; 5 ms = 1/200 second
   95 0000003C E5801018        str              r1,[r0,#MR0]
   96 00000040         
   97 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   98 00000044 E5801014        str              r1,[r0,#MCR]
   99 00000048         



ARM Macro Assembler    Page 4 


  100 00000048 E3A01001        mov              r1,#TimerCommandRun
  101 0000004C E5801004        str              r1,[r0,#TCR]
  102 00000050         
  103 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
  104 00000050         
  105 00000050         while
  106 00000050 E59F1100        ldr              r1,=IO0DIR
  107 00000054 E3A02826        ldr              r2,=0x00260000 ;select P1.19--P
                                                            1.16
  108 00000058         ;ldr r2,=0x02600000 ;select P1.19--P1.16
  109 00000058 E5812000        str              r2,[r1]     ;make them outputs
  110 0000005C E59F10F8        ldr              r1,=IO0SET
  111 00000060 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
  112 00000064 E59F20F4        ldr              r2,=IO0CLR
  113 00000068         ;ldr R4,=0x00220000; colour6
  114 00000068         ;BL lightup
  115 00000068         ;B  while
  116 00000068         while2
  117 00000068         ;800 = 0.5s
  118 00000068 E59F50F4        ldr              R5,=timecounter
  119 0000006C E5955000        ldr              R5,[R5]
  120 00000070 E3550E32        CMP              R5,#0x0320
  121 00000074 0A000011        BEQ              colour1
  122 00000078 E3550D19        CMP              R5,#0x0640
  123 0000007C 0A000012        BEQ              colour2
  124 00000080 E3550E96        CMP              R5,#0x0960
  125 00000084 0A000013        BEQ              colour3
  126 00000088 E3550EC2        CMP              R5,#0x0C20
  127 0000008C 0A000014        BEQ              colour4
  128 00000090 E3550EFA        CMP              R5,#0x0FA0
  129 00000094 0A000015        BEQ              colour5
  130 00000098 E3A07D4B        LDR              R7,=0x12C0
  131 0000009C E1550007        CMP              R5,R7
  132 000000A0 0A000015        BEQ              colour6
  133 000000A4 E3A07C16        LDR              R7,=0x1600
  134 000000A8 E1550007        CMP              R5,R7
  135 000000AC 0A000015        BEQ              colour7
  136 000000B0 E3A07C19        LDR              R7,=0x1900
  137 000000B4 E1550007        CMP              R5,R7
  138 000000B8 0A000015        BEQ              colour8
  139 000000BC         
  140 000000BC EAFFFFE9        B                while2
  141 000000C0         
  142 000000C0         colour1
  143 000000C0 E3A04802        ldr              R4,=0x00020000 ; colour1
  144 000000C4 EB000015        BL               lightup
  145 000000C8 EAFFFFE6        B                while2
  146 000000CC         colour2
  147 000000CC E3A04701        ldr              R4,=0x00040000 ; colour2
  148 000000D0 EB000012        BL               lightup
  149 000000D4 EAFFFFE3        B                while2
  150 000000D8         colour3
  151 000000D8 E3A04806        ldr              R4,=0x00060000 ; colour3
  152 000000DC EB00000F        BL               lightup
  153 000000E0 EAFFFFE0        B                while2
  154 000000E4         colour4
  155 000000E4 E3A04602        ldr              R4,=0x00200000 ; colour4



ARM Macro Assembler    Page 5 


  156 000000E8 EB00000C        BL               lightup
  157 000000EC EAFFFFDD        B                while2
  158 000000F0         colour5
  159 000000F0 E3A04822        ldr              R4,=0x00220000 ; colour5
  160 000000F4 EB000009        BL               lightup
  161 000000F8 EAFFFFDA        B                while2
  162 000000FC         colour6
  163 000000FC E3A04709        ldr              R4,=0x00240000 ; colour6
  164 00000100 EB000006        BL               lightup
  165 00000104 EAFFFFD7        B                while2
  166 00000108         colour7
  167 00000108 E3A04826        ldr              R4,=0x00260000 ; colour7
  168 0000010C EB000003        BL               lightup
  169 00000110 EAFFFFD4        B                while2
  170 00000114         colour8
  171 00000114 E3A04000        ldr              R4,=0x00000000 ; colour8
  172 00000118 EB000000        BL               lightup
  173 0000011C         ;MOV R8,#0
  174 0000011C         ;LDR R9,=timecounter
  175 0000011C         ;STR R8,[R9] 
  176 0000011C         
  177 0000011C EAFFFFD1        B                while2
  178 00000120         
  179 00000120         ;LDR R2,=IO0PIN
  180 00000120         ;LDR  R3,[R2]
  181 00000120         ;ldr R3,=0x00000002
  182 00000120         ;STR R3,[R2]
  183 00000120         
  184 00000120         
  185 00000120         
  186 00000120         
  187 00000120         
  188 00000120         ;ldr r1,=IO0DIR
  189 00000120         ;ldr r2,=0x000f0000 ;select P1.19--P1.16
  190 00000120         ;str r2,[r1]  ;make them outputs
  191 00000120         ;ldr r1,=IO0SET
  192 00000120         ;str r2,[r1]  ;set them to turn the LEDs off
  193 00000120         ;ldr r2,=IO0CLR
  194 00000120         
  195 00000120         
  196 00000120         ;while
  197 00000120         ;   ldr R4,=0x00040000
  198 00000120         ;   BL lightup
  199 00000120         ;   ;BL irqhan
  200 00000120         ;   ldr R4,=0x00020000
  201 00000120         ;   BL lightup
  202 00000120         ;   ;BL irqhan
  203 00000120         ;   B  while
  204 00000120         
  205 00000120         
  206 00000120         
  207 00000120         lightup
  208 00000120 E92D0008        STMFD            SP!,{R3}
  209 00000124 E59F102C        ldr              r1,=IO0DIR
  210 00000128 E3A02826        ldr              r2,=0x00260000 ;select P1.19--P
                                                            1.16
  211 0000012C         ;ldr r2,=0x02600000 ;select P1.19--P1.16
  212 0000012C E5812000        str              r2,[r1]     ;make them outputs
  213 00000130 E59F1024        ldr              r1,=IO0SET



ARM Macro Assembler    Page 6 


  214 00000134 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
  215 00000138 E59F2020        ldr              r2,=IO0CLR
  216 0000013C         ; r1 points to the SET register
  217 0000013C         ; r2 points to the CLEAR register
  218 0000013C E5824000        str              r4,[r2]     ; clear the bit -> 
                                                            turn on the LED
  219 00000140         
  220 00000140 E8BD0008        LDMFD            SP!,{R3}
  221 00000144 E12FFF1E        BX               R14
  222 00000148         
  223 00000148         
  224 00000148         
  225 00000148         ;wloop b wloop    ; branch always
  226 00000148         ;main program execution will never drop below the statem
                       ent above.
  227 00000148         
  228 00000148 FFFFF000 
              00000000 
              E0004000 
              000023FF 
              E0028008 
              E0028004 
              E002800C 
              00000000         AREA             InterruptStuff, CODE, READONLY
  229 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  230 00000004 E92D4007        stmfd            sp!,{r0-r2,lr} ; the lr will be
                                                             restored to the pc
                                                            
  231 00000008         
  232 00000008         ;this is the body of the interrupt handler
  233 00000008         
  234 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  235 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  236 00000008         
  237 00000008 E59F0030        LDR              R0,=timecounter ;
  238 0000000C         
  239 0000000C E5901000        LDR              R1,[R0]     ;
  240 00000010 E2811001        ADD              R1,R1,#1    ;
  241 00000014 E3510C19        CMP              R1,#0x1900
  242 00000018 9A000000        BLS              next
  243 0000001C E3A01000        MOV              R1,#0
  244 00000020         next
  245 00000020 E5801000        STR              R1,[R0]     ;
  246 00000024         
  247 00000024         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  248 00000024         ;i.e. we 'acknowledge' the interrupt
  249 00000024 E59F0018        ldr              r0,=T0
  250 00000028 E3A01001        mov              r1,#TimerResetTimer0Interrupt
  251 0000002C E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  252 00000030         
  253 00000030         ;here we stop the VIC from making the interrupt request 
                       to the CPU:



ARM Macro Assembler    Page 7 


  254 00000030 E59F0010        ldr              r0,=VIC
  255 00000034 E3A01000        mov              r1,#0
  256 00000038 E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  257 0000003C         
  258 0000003C E8FD8007        ldmfd            sp!,{r0-r2,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  259 00000040         ; and also restoring the CPSR
  260 00000040         
  261 00000040 00000000 
              E0004000 
              FFFFF000         area             inthhanstuff,data,readwrite
  262 00000000 00 00 00 
              00       counter space            4
  263 00000004 00 00 00 
              00       seconds space            4
  264 00000008 00000000 
                       timecounter
                               DCD              0
  265 0000000C         
  266 0000000C                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 32 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
colour1 000000C0

Symbol: colour1
   Definitions
      At line 142 in file App.s
   Uses
      At line 121 in file App.s
Comment: colour1 used once
colour2 000000CC

Symbol: colour2
   Definitions
      At line 146 in file App.s
   Uses
      At line 123 in file App.s
Comment: colour2 used once
colour3 000000D8

Symbol: colour3
   Definitions
      At line 150 in file App.s
   Uses
      At line 125 in file App.s
Comment: colour3 used once
colour4 000000E4

Symbol: colour4
   Definitions
      At line 154 in file App.s
   Uses
      At line 127 in file App.s
Comment: colour4 used once
colour5 000000F0

Symbol: colour5
   Definitions
      At line 158 in file App.s
   Uses
      At line 129 in file App.s
Comment: colour5 used once
colour6 000000FC

Symbol: colour6
   Definitions
      At line 162 in file App.s
   Uses
      At line 132 in file App.s
Comment: colour6 used once
colour7 00000108

Symbol: colour7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 166 in file App.s
   Uses
      At line 135 in file App.s
Comment: colour7 used once
colour8 00000114

Symbol: colour8
   Definitions
      At line 170 in file App.s
   Uses
      At line 138 in file App.s
Comment: colour8 used once
lightup 00000120

Symbol: lightup
   Definitions
      At line 207 in file App.s
   Uses
      At line 144 in file App.s
      At line 148 in file App.s
      At line 152 in file App.s
      At line 156 in file App.s
      At line 160 in file App.s
      At line 164 in file App.s
      At line 168 in file App.s
      At line 172 in file App.s

start 00000000

Symbol: start
   Definitions
      At line 38 in file App.s
   Uses
      At line 37 in file App.s
Comment: start used once
while 00000050

Symbol: while
   Definitions
      At line 105 in file App.s
   Uses
      None
Comment: while unused
while2 00000068

Symbol: while2
   Definitions
      At line 116 in file App.s
   Uses
      At line 140 in file App.s
      At line 145 in file App.s
      At line 149 in file App.s
      At line 153 in file App.s
      At line 157 in file App.s
      At line 161 in file App.s
      At line 165 in file App.s
      At line 169 in file App.s
      At line 177 in file App.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 228 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 229 in file App.s
   Uses
      At line 72 in file App.s
Comment: irqhan used once
next 00000020

Symbol: next
   Definitions
      At line 244 in file App.s
   Uses
      At line 242 in file App.s
Comment: next used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

counter 00000000

Symbol: counter
   Definitions
      At line 262 in file App.s
   Uses
      None
Comment: counter unused
inthhanstuff 00000000

Symbol: inthhanstuff
   Definitions
      At line 261 in file App.s
   Uses
      None
Comment: inthhanstuff unused
seconds 00000004

Symbol: seconds
   Definitions
      At line 263 in file App.s
   Uses
      None
Comment: seconds unused
timecounter 00000008

Symbol: timecounter
   Definitions
      At line 264 in file App.s
   Uses
      At line 118 in file App.s
      At line 237 in file App.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 47 in file App.s
   Uses
      At line 112 in file App.s
      At line 215 in file App.s

IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 45 in file App.s
   Uses
      At line 106 in file App.s
      At line 209 in file App.s

IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 48 in file App.s
   Uses
      None
Comment: IO0PIN unused
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 46 in file App.s
   Uses
      At line 110 in file App.s
      At line 213 in file App.s

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 42 in file App.s
   Uses
      None
Comment: IO1CLR unused
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 40 in file App.s
   Uses
      None
Comment: IO1DIR unused
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 43 in file App.s
   Uses
      None
Comment: IO1PIN unused



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 41 in file App.s
   Uses
      None
Comment: IO1SET unused
IR 00000000

Symbol: IR
   Definitions
      At line 10 in file App.s
   Uses
      At line 91 in file App.s
      At line 251 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 30 in file App.s
   Uses
      At line 75 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 23 in file App.s
   Uses
      At line 79 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 12 in file App.s
   Uses
      At line 98 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 13 in file App.s
   Uses
      At line 95 in file App.s
Comment: MR0 used once
PWMIR E0014000

Symbol: PWMIR
   Definitions
      At line 52 in file App.s
   Uses
      None
Comment: PWMIR unused
PWMLER E0014050




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: PWMLER
   Definitions
      At line 66 in file App.s
   Uses
      None
Comment: PWMLER unused
PWMMCR E0014014

Symbol: PWMMCR
   Definitions
      At line 57 in file App.s
   Uses
      None
Comment: PWMMCR unused
PWMMR0 E0014018

Symbol: PWMMR0
   Definitions
      At line 58 in file App.s
   Uses
      None
Comment: PWMMR0 unused
PWMMR1 E001401C

Symbol: PWMMR1
   Definitions
      At line 59 in file App.s
   Uses
      None
Comment: PWMMR1 unused
PWMMR2 E0014020

Symbol: PWMMR2
   Definitions
      At line 60 in file App.s
   Uses
      None
Comment: PWMMR2 unused
PWMMR3 E0014024

Symbol: PWMMR3
   Definitions
      At line 61 in file App.s
   Uses
      None
Comment: PWMMR3 unused
PWMMR4 E0014040

Symbol: PWMMR4
   Definitions
      At line 62 in file App.s
   Uses
      None
Comment: PWMMR4 unused
PWMMR5 E0014044

Symbol: PWMMR5
   Definitions
      At line 63 in file App.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: PWMMR5 unused
PWMMR6 E0014048

Symbol: PWMMR6
   Definitions
      At line 64 in file App.s
   Uses
      None
Comment: PWMMR6 unused
PWMPC E0014010

Symbol: PWMPC
   Definitions
      At line 56 in file App.s
   Uses
      None
Comment: PWMPC unused
PWMPCR E001404C

Symbol: PWMPCR
   Definitions
      At line 65 in file App.s
   Uses
      None
Comment: PWMPCR unused
PWMPR E001400C

Symbol: PWMPR
   Definitions
      At line 55 in file App.s
   Uses
      None
Comment: PWMPR unused
PWMTC E0014008

Symbol: PWMTC
   Definitions
      At line 54 in file App.s
   Uses
      None
Comment: PWMTC unused
PWMTCR E0014004

Symbol: PWMTCR
   Definitions
      At line 53 in file App.s
   Uses
      None
Comment: PWMTCR unused
PWM_BASE E0014000

Symbol: PWM_BASE
   Definitions
      At line 51 in file App.s
   Uses
      None
Comment: PWM_BASE unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

T0 E0004000

Symbol: T0
   Definitions
      At line 7 in file App.s
   Uses
      At line 85 in file App.s
      At line 249 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 8 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 11 in file App.s
   Uses
      At line 88 in file App.s
      At line 101 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 28 in file App.s
   Uses
      At line 29 in file App.s
      At line 75 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 29 in file App.s
   Uses
      At line 78 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 15 in file App.s
   Uses
      At line 87 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 16 in file App.s
   Uses
      At line 100 in file App.s
Comment: TimerCommandRun used once



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 17 in file App.s
   Uses
      At line 97 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 19 in file App.s
   Uses
      At line 90 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 18 in file App.s
   Uses
      At line 250 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 22 in file App.s
   Uses
      At line 70 in file App.s
      At line 254 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 24 in file App.s
   Uses
      At line 82 in file App.s
      At line 256 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 25 in file App.s
   Uses
      At line 73 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 26 in file App.s
   Uses
      At line 76 in file App.s
Comment: VectCtrl0 used once
43 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: main unused
1 symbol
401 symbols in table
